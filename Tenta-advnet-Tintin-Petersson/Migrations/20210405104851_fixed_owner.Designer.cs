// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tenta_advnet_Tintin_Petersson;

namespace Tenta_advnet_Tintin_Petersson.Migrations
{
    [DbContext(typeof(HamsterDbContext))]
    [Migration("20210405104851_fixed_owner")]
    partial class fixed_owner
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Logg_ActivitiesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Logg_ActivitiesId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Cage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cages");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Cage_Buddies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CageId")
                        .HasColumnType("int");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CageId");

                    b.ToTable("Cage_Buddies");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.ExerciseArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExerciseAreas");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Hamster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("Cage_BuddiesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeOfLastExercise")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("Cage_BuddiesId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Hamsters");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Logg_Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HamsterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HamsterId");

                    b.ToTable("Logg_Activities");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Activity", b =>
                {
                    b.HasOne("Tenta_advnet_Tintin_Petersson.Logg_Activities", "Logg_Activities")
                        .WithMany("Activities")
                        .HasForeignKey("Logg_ActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Logg_Activities");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Cage_Buddies", b =>
                {
                    b.HasOne("Tenta_advnet_Tintin_Petersson.Cage", "Cage")
                        .WithMany()
                        .HasForeignKey("CageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cage");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Hamster", b =>
                {
                    b.HasOne("Tenta_advnet_Tintin_Petersson.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("Tenta_advnet_Tintin_Petersson.Cage_Buddies", "Cage_Buddies")
                        .WithMany()
                        .HasForeignKey("Cage_BuddiesId");

                    b.HasOne("Tenta_advnet_Tintin_Petersson.Owner", "Owner")
                        .WithMany("Hamsters")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Cage_Buddies");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Logg_Activities", b =>
                {
                    b.HasOne("Tenta_advnet_Tintin_Petersson.Hamster", "Hamster")
                        .WithMany("Logg_Activites")
                        .HasForeignKey("HamsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hamster");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Hamster", b =>
                {
                    b.Navigation("Logg_Activites");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Logg_Activities", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Tenta_advnet_Tintin_Petersson.Owner", b =>
                {
                    b.Navigation("Hamsters");
                });
#pragma warning restore 612, 618
        }
    }
}
